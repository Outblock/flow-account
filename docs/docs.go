// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/address": {
            "get": {
                "description": "Submit public key to receive accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get accounts",
                "responses": {
                    "200": {
                        "description": "return 200 with the array of accounts.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Wallet"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create address use public key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create an address",
                "parameters": [
                    {
                        "description": "public key",
                        "name": "publicKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "sign algorithm",
                        "name": "signatureAlgorithm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "hash algorithm",
                        "name": "hashAlgorithm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "weight of the key",
                        "name": "weight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with the transaction id.",
                        "schema": {
                            "$ref": "#/definitions/controllers.WalletReturn"
                        }
                    }
                }
            }
        },
        "/v1/address/network": {
            "post": {
                "description": "add by uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add an address",
                "parameters": [
                    {
                        "description": "account key object",
                        "name": "account_key",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forms.AccountForm"
                        }
                    },
                    {
                        "description": "the network of the address you want to create",
                        "name": "network",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 while address creation processing in backend."
                    }
                }
            }
        },
        "/v1/address/previewnet": {
            "get": {
                "description": "Submit public key to receive accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get accounts",
                "responses": {
                    "200": {
                        "description": "return 200 with the array of accounts from previewnet.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Wallet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/address/testnet": {
            "get": {
                "description": "Submit public key to receive accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get accounts",
                "responses": {
                    "200": {
                        "description": "return 200 with the array of accounts from testnet.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.Wallet"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "use public key to create address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create an address",
                "parameters": [
                    {
                        "description": "public key",
                        "name": "publicKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "sign algorithm",
                        "name": "signatureAlgorithm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "hash algorithm",
                        "name": "hashAlgorithm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "weight of the key",
                        "name": "weight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "return 200 with the transaction id.",
                        "schema": {
                            "$ref": "#/definitions/controllers.WalletReturn"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.WalletReturn": {
            "type": "object",
            "properties": {
                "txId": {
                    "type": "string"
                }
            }
        },
        "forms.AccountForm": {
            "type": "object",
            "required": [
                "hashAlgorithm",
                "publicKey",
                "signatureAlgorithm",
                "weight"
            ],
            "properties": {
                "hashAlgorithm": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "models.Wallet": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "hash_algo": {
                    "type": "integer"
                },
                "hash_algo_string": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "public_key": {
                    "type": "string"
                },
                "sign_algo": {
                    "type": "integer"
                },
                "sign_algo_string": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
